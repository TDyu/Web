@charset "UTF-8";
.box, .block {
  border: solid 2px;
}

.box {
  width: 900px;
  height: 500px;
  position: relative;
}

.block {
  width: 50px;
  height: 50px;
  position: absolute;
  bottom: 0px;
}

.block1 {
  left: 150px;
  -webkit-animation: ani1 2s infinite;
  animation: ani1 2s infinite;
  /**
   * animation-timing-fuction: 可以用來制定speech curve
   *
   * 幾個value
   * ease: 預設值, 慢的開始, 中間較快, 慢的結束
   * linear: 等速
   * ease-in: 慢的開始
   * ease-out: 慢的結束
   * step(int值, start|end): 代表要切幾塊狀態, 有卡卡的感覺, 所以切的越細就越像原本的, 是以進度來切不是時間(例如2, 就是0~50%一塊, 50~100%一塊)
   *                          而第二個參數是填start或是end(預設), 是指定要再每一階段的開始還是結束作停頓
   * step-start: = steps(1, start) 也就是開始時停頓, 後面等速(我看來是這樣)
   * step-end: = steps(1, end) 也就是結束時停頓, 其他等速
   * cubic-bezier(n,n,n,n): 貝茲曲線, 從繪畫開始一直沒搞懂的東西, 自己研究去, 就是定節點唄
   * initial: 使用預設值
   * inherit: 繼承父元素的
   *
   * 可以到這裡查看: easing函數速查表: http://easings.net/zh-tw
   *              (其中ease大概長的像裡面的easeinOutCubic)
   */
  -webkit-animation-timing-function: steps(1000);
  animation-timing-function: steps(1000);
}

.block2 {
  left: 300px;
  -webkit-animation: ani2 2s infinite;
  animation: ani2 2s infinite;
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
}

.block3 {
  left: 450px;
  -webkit-animation: ani3 50s infinite;
  animation: ani3 50s infinite;
}

.block4 {
  left: 600px;
  -webkit-animation: ani4 1s infinite;
  animation: ani4 1s infinite;
}

.block5 {
  left: 750px;
  -webkit-animation: ani5 1s infinite;
  animation: ani5 1s infinite;
}

@-webkit-keyframes ani1 {
  0% {
    bottom: 100px;
  }
  50% {
    bottom: 0px;
    background-color: red;
  }
  100% {
    bottom: 100px;
  }
}

@keyframes ani1 {
  0% {
    bottom: 100px;
  }
  50% {
    bottom: 0px;
    background-color: red;
  }
  100% {
    bottom: 100px;
  }
}

@-webkit-keyframes ani2 {
  0% {
    bottom: 100px;
  }
  30% {
    background-color: white;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  50% {
    bottom: 0px;
    background-color: red;
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
  }
  70% {
    background-color: white;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    bottom: 100px;
  }
}

@keyframes ani2 {
  0% {
    bottom: 100px;
  }
  30% {
    background-color: white;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  50% {
    bottom: 0px;
    background-color: red;
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
  }
  70% {
    background-color: white;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    bottom: 100px;
  }
}

@-webkit-keyframes ani3 {
  0% {
    bottom: 100px;
  }
  30% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  50% {
    bottom: 0px;
    -webkit-transform: scale(0.5);
    transform: scale(0.5);
  }
  70% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  100% {
    bottom: 100px;
  }
}

@keyframes ani3 {
  0% {
    bottom: 100px;
  }
  30% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  50% {
    bottom: 0px;
    -webkit-transform: scale(0.5);
    transform: scale(0.5);
  }
  70% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  100% {
    bottom: 100px;
  }
}

@-webkit-keyframes ani4 {
  0% {
    -webkit-transform: translateX(0px) translateY(0px);
    transform: translateX(0px) translateY(0px);
  }
  20% {
    -webkit-transform: translateX(50px) translateY(0px);
    transform: translateX(50px) translateY(0px);
  }
  40% {
    -webkit-transform: translateX(50px) translateY(-50px);
    transform: translateX(50px) translateY(-50px);
  }
  60% {
    -webkit-transform: translateX(0px) translateY(-50px);
    transform: translateX(0px) translateY(-50px);
  }
  80% {
    -webkit-transform: translateX(0px) translateY(0px);
    transform: translateX(0px) translateY(0px);
  }
}

@keyframes ani4 {
  0% {
    -webkit-transform: translateX(0px) translateY(0px);
    transform: translateX(0px) translateY(0px);
  }
  20% {
    -webkit-transform: translateX(50px) translateY(0px);
    transform: translateX(50px) translateY(0px);
  }
  40% {
    -webkit-transform: translateX(50px) translateY(-50px);
    transform: translateX(50px) translateY(-50px);
  }
  60% {
    -webkit-transform: translateX(0px) translateY(-50px);
    transform: translateX(0px) translateY(-50px);
  }
  80% {
    -webkit-transform: translateX(0px) translateY(0px);
    transform: translateX(0px) translateY(0px);
  }
}

@-webkit-keyframes ani5 {
  0% {
    /* skew是用來扭曲 */
    -webkit-transform: skewX(20deg);
    transform: skewX(20deg);
    -webkit-transform-origin: 0% 100%;
    transform-origin: 0% 100%;
  }
  50% {
    -webkit-transform: skewX(-20deg);
    transform: skewX(-20deg);
    -webkit-transform-origin: 0% 100%;
    transform-origin: 0% 100%;
  }
  100% {
    -webkit-transform: skewX(20deg);
    transform: skewX(20deg);
    -webkit-transform-origin: 0% 100%;
    transform-origin: 0% 100%;
  }
}

@keyframes ani5 {
  0% {
    /* skew是用來扭曲 */
    -webkit-transform: skewX(20deg);
    transform: skewX(20deg);
    -webkit-transform-origin: 0% 100%;
    transform-origin: 0% 100%;
  }
  50% {
    -webkit-transform: skewX(-20deg);
    transform: skewX(-20deg);
    -webkit-transform-origin: 0% 100%;
    transform-origin: 0% 100%;
  }
  100% {
    -webkit-transform: skewX(20deg);
    transform: skewX(20deg);
    -webkit-transform-origin: 0% 100%;
    transform-origin: 0% 100%;
  }
}

/*# sourceMappingURL=style.css.map */